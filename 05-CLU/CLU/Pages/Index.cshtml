@page
@model IndexModel
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Home page";
}

<form method="post" asp-page-handler="ProcessInput">
    <div class="form-group">
        <label for="inputText">Enter text:</label>
        <textarea class="form-control" id="inputText" name="InputText" rows="5" oninput="checkInput(); resizeTextarea()"></textarea>
    </div>
    <button type="submit" name="submit" id="submitSDK" value="SDK" class="btn btn-primary" disabled>Submit</button>
    <button type="submit" name="submit" id="submitREST" value="REST" class="btn btn-primary" disabled>Submit (REST)</button>
</form>

<!-- Top intent  -->
@if (ViewData["TopIntent"] != null)
{
    <div class="alert alert-primary" role="alert">
        Top intent: <b>@ViewData["TopIntent"]</b>
    </div>
}

<!-- Entity -->
@if (ViewData["RESTMethod"] != null)
{
    <div class="alert alert-primary" role="alert">
        Entity: <b>@ViewData["Entity"]</b>
    </div>
}

<!-- Date -->
@if (ViewData["Date"] != null)
{
    <div class="alert alert-info" role="alert">
        The date on <b>@ViewData["Entity"]</b> will be: <b>@ViewData["Date"]</b>
    </div>
}

<!-- Weather -->
@if (ViewData["Weather"] != null)
{
    <div class="alert alert-info" role="alert">
        The weather in <b>@ViewData["Entity"]</b> is currently <b>@ViewData["Weather"]</b>
    </div>
}

<!-- None -->
@if (ViewData["None"] != null)
{
    <div class="alert alert-warning" role="alert">
        Try asking about the weather in a city, or about a date this week.
    </div>
}

<!-- Request (REST) -->
@if (ViewData["RESTMethod"] != null)
{
    <div class="alert alert-secondary" role="alert">
        <button id="request" class="btn btn-primary" onclick="toggleDetails('request')">Show REST request details</button>
        <div id="request-details" style="display: none;">
            <br><b>REST request details:</b><br>
            Method: <b>@ViewData["RESTMethod"]</b><br>
            URI: <b>@ViewData["RESTUri"]</b><br>
            Body:
            <b>
            <pre>
@Html.Raw(JsonConvert.SerializeObject(ViewData["RESTBody"], Formatting.Indented).TrimStart())
            </pre>
            </b>
        </div>
    </div>
}

<!-- Response -->
@if (ViewData["Response"] != null)
{
    <div class="alert alert-secondary" role="alert">
        <button id="cluResponse" class="btn btn-primary" onclick="toggleDetails('cluResponse')">Show REST response details</button>
        <div id="cluResponse-details" style="display: none;">
            <br><b>Response:</b> <br/>  
            <pre>
@Html.Raw(JsonConvert.SerializeObject(ViewData["Response"], Formatting.Indented))
            </pre>
        </div>
    </div>
}


<script>
    var inputTextElement = document.getElementById("inputText");
    var submitSDKElement = document.getElementById("submitSDK");
    var submitRESTElement = document.getElementById("submitREST");
    function checkInput() {
        var inputText = inputTextElement.value;
        if (inputText.trim().length > 0) {
            submitSDKElement.disabled = false;
            submitRESTElement.disabled = false;
        } else {
            submitSDKElement.disabled = true;
            submitRESTElement.disabled = true;
        }
    }

    function resizeTextarea() {
    const textarea = document.getElementById('inputText');
    textarea.style.height = 'auto';
    textarea.style.height = textarea.scrollHeight + 'px';
    }

    function toggleDetails(buttonId) {
        var details = document.getElementById(buttonId + "-details");
        var button = document.getElementById(buttonId);
        var reqOrResp = buttonId.toLowerCase().includes("response") ? "response" : "request";
        if (details.style.display === "none") {
            details.style.display = "block";
            button.textContent = "Hide REST " + reqOrResp + " details";
        } else {
            details.style.display = "none";
            button.textContent = "Show REST " + reqOrResp + " details";
        }
    }

</script>